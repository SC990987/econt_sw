daq:
 #input_file: /home/HGCAL_dev/src/econt_sw/econt_sw/data/EPORTRX_data_zeros.csv
 input_file: /home/HGCAL_dev/src/econt_sw/econt_sw/data/EPORTRX_data_wafer.csv

ECON-T:
 RW:
  # Turn on automatic alignment for all links  
  CH_ALIGNER_*INPUT_ALL:
   registers:
    config:
     value: 1

  ALIGNER_ALL:
   registers:
    config:
     # Enable snapshot_arm [bit 0], and snapshot_en [bit 1] but do not enable i2c_snapshot_en [bit 2] nor dbg_fc_cnt_clr [bit 3]
     snapshot_en:
      param_value: 1
     snapshot_arm:
      param_value: 1
    match_pattern_val:
     # patt_BX1 = 0xaccccccc
     # patt_BX0 = 0x9ccccccc
     # match_val = (patt_BX0 << 32) | patt_BX1
     value: 0x9cccccccaccccccc
    match_mask_val:
     # mask for the word aligner
     value: 0x0000000000000000
    orbsyn_cnt_max_val:
     # maximum bunch counter value to 3563, the number of bunch crossings in one orbit (minus one)
     value: 3563
    # Set the bunch counter value on an orbit sync fast command to 0. Needs to be 1 to test STC
    orbsyn_cnt_load_val:
     value: 1
    # Set the bunch counter value on which to take a snapshot to 4.  This needs to be set so that the special BX0 sync pattern from the HGCROC will appear inside the snapshot.
    orbsyn_cnt_snapshot:
     value: 4

  FMTBUF_ALL:
   registers:
    tx_sync_word:
     value: 0b00100100010
    buff_t1:
     # Output buffer threshold T1 
     # This must be at least 52 for the econ-t emulator to work
     value: 338
    buff_t2:
     value: 314
    buff_t3:  
     value: 25
    config:
     params:
      eporttx_numen:
       # Number of output ports enabled
       param_value: 13
      use_sum:
       param_value: 0
      stc_type:
       param_value: 0

  MFC_MUX_SELECT:
   registers:
    mux_select_*:
     value: [ 7,  4,   5,  6,  3,  1,  0,  2,
              8,  9,  10, 11, 14, 13, 12, 15,
              23, 20, 21, 22, 19, 17, 16, 18,
              25, 24, 26, 27, 30, 31, 28, 29,
              38, 37, 39, 46, 36, 34, 33, 35,
              40, 32, 41, 42, 47, 45, 43, 44]

  MFC_CAL_VAL:
   registers:
    cal_*:
     value: [348, 347, 335, 336, 347, 348, 335, 335,
             323, 323, 311, 311, 325, 324, 312, 314, 
             307, 293, 304, 318, 280, 267, 279, 291,
             303, 290, 302, 315, 329, 316, 328, 340,
             263, 276, 274, 261, 289, 302, 300, 287,
             286, 299, 298, 286, 261, 274, 274, 262]             

  MFC_ALGORITHM_SEL_DENSITY:
   registers:
    algo:
     params:
      select:
       # 0: threshold sum, 1: Super Trigger Cell, 2: Best Choice (disabled), 3: repeater, 4: Autoencoder (Disabled)   
       param_value: 0
       # param_value: 3
      density:
       # 1: high density
       param_value: 1

  ALGO_THRESHOLD_VAL:
   registers:
    threshold_val_*:
     value: [0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0]

  ALGO_DROPLSB:
   registers:
    drop_lsb:
     value: 3